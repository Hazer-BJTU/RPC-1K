file(GLOB SOURCES "src/*")
file(GLOB TESTS "test/*")

message(STATUS "<putils>- putils lib option flags used: ${COMPILER_OPTION_FLAGS}")

set(PUTILS_MACROS "")
set(PUTILS_ENABLED_MACROS "")
option(ENABLE_PUTILS_GENERAL_EXCEPTION_KNOWN_ONLY ON)
list(APPEND PUTILS_MACROS PUTILS_GENERAL_EXCEPTION_KNOWN_ONLY)
if (ENABLE_PUTILS_GENERAL_EXCEPTION_KNOWN_ONLY)
    list(APPEND PUTILS_ENABLED_MACROS PUTILS_GENERAL_EXCEPTION_KNOWN_ONLY)
endif()
option(ENABLE_PUTILS_MEMORY_LEAK_CHECK OFF)
list(APPEND PUTILS_MACROS PUTILS_MEMORY_LEAK_CHECK)
if (ENABLE_PUTILS_MEMORY_LEAK_CHECK)
    list(APPEND PUTILS_ENABLED_MACROS PUTILS_MEMORY_LEAK_CHECK)
endif()

add_library(putils SHARED ${SOURCES})
set_target_properties(putils PROPERTIES PREFIX "${PROJECT_NAME}_") 
target_compile_definitions(putils PRIVATE ${PUTILS_ENABLED_MACROS})
target_link_options(putils PRIVATE ${COMPILER_OPTION_FLAGS})

message(STATUS "<putils>- Start checking macros for putils.")
set(PUTILS_MACROS PUTILS_GENERAL_EXCEPTION_KNOWN_ONLY PUTILS_MEMORY_LEAK_CHECK)
foreach (macro ${PUTILS_MACROS})
    get_target_property(DEFS putils COMPILE_DEFINITIONS)
    list(FIND DEFS ${macro} POS)
    if(NOT POS EQUAL -1)
        message(STATUS "<putils>- [âœ“] ${macro}")
    else()
        message(STATUS "<putils>- [ ] ${macro}")
    endif()
endforeach()

if(GENERATE_TEST_TARGETS)
    message(STATUS "<putils>- Start generating test targets for putils.")
    message(STATUS "<putils>- putils tests option flags used: ${COMPILER_OPTION_FLAGS}")
    foreach (test_source_file ${TESTS})
        get_filename_component(executable_name ${test_source_file} NAME_WE)
        add_executable(${executable_name} ${test_source_file})
        target_link_options(${executable_name} PRIVATE ${COMPILER_OPTION_FLAGS})
        target_link_libraries(${executable_name} putils)
        set_target_properties(
            ${executable_name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY 
            "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/putils_tests"
        )
    endforeach()
else()
    message(STATUS "<putils>- Skip generating test targets for putils.")
endif()
